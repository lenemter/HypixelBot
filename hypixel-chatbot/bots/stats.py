import hypixel
from common import API_KEY, ERROR_COLOR, SUCCESS_COLOR
from discord import Embed
from discord.ext import commands
from discord.ext.commands.context import Context
from hypixel import HypixelException
from stats_utils import create_head, format_date, format_number, round_number


class HypixelStats(commands.Cog):
    def __init__(self, bot, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.bot = bot

    @commands.group(name="stats")
    async def get_stats(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
                friends = await client.player_friends(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        last_login = player.last_login
        if last_login:
            last_login = format_date(player.last_login)
        else:
            last_login = "–°–∫—Ä—ã—Ç –≤ Hypixel API"

        last_game = player.most_recent_game
        if not last_game:
            last_game = "–°–∫—Ä—ã—Ç–∞ –≤ Hypixel API"
        else:
            last_game = player.most_recent_game.clean_name

        embed = Embed(
            title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {player.name}",
            description=(
                f"–†–∞–Ω–≥: {player.rank}\n"
                f"\n"
                f"–£—Ä–æ–≤–µ–Ω—å: {format_number(player.level)}\n"
                f"–ê—á–∏–≤–∫–∏: {format_number(player.achievement_points)}\n"
                f"–ö–∞—Ä–º–∞: {format_number(player.karma)}\n"
                f"\n"
                f"–î—Ä—É–∑—å—è: {format_number(len(friends))}\n"
                f"\n"
                f"–ü–µ—Ä–≤—ã–π –≤—Ö–æ–¥: {format_date(player.first_login)}\n"
                f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: {last_login}\n"
                f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∏–≥—Ä–∞: {last_game}"
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="names")
    async def get_names(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        names = [name for name in player.known_aliases]
        names.reverse()

        embed = Embed(
            title=f"üìä –ò—Å—Ç–æ—Ä–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤ {player.name}",
            description=(
                "\n".join((f"{names.index(name) + 1}. {name}" for name in names))
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="socials")
    async def get_socials(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        socials = dict()
        socials["Discord"] = player.socials.discord
        socials["YouTube"] = player.socials.youtube
        socials["Twitter"] = player.socials.twitter
        socials["Twitch"] = player.socials.twitch
        socials["Instagram"] = player.socials.instagram
        socials["Hypixel Forums"] = player.socials.hypixel_forums

        message_content = "\n".join(
            (f"{social}: {socials[social]}" for social in socials if socials[social])
        )
        if not message_content:
            message_content = "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã"

        embed = Embed(
            title=f"üìä –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ {player.name}",
            description=(message_content),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="bw")
    async def get_bw(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        if not player.bedwars.winstreak:
            player_bedwars_winstreak = 0
        else:
            player_bedwars_winstreak = player.bedwars.winstreak

        embed = Embed(
            title=f"üìä Bed Wars —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {player.name}",
            description=(
                f"–£—Ä–æ–≤–µ–Ω—å: {format_number(player.bedwars.level)}‚ú´\n"
                f"\n"
                f"–ö–∏–ª–ª—ã: {format_number(player.bedwars.kills)}\n"
                f"–°–º–µ—Ä—Ç–∏: {format_number(player.bedwars.deaths)}\n"
                f"K/D: {format_number(player.bedwars.kdr)}\n"
                f"\n"
                f"–§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∏–ª–ª—ã: {format_number(player.bedwars.final_kills)}\n"
                f"–§–∏–Ω–∞–ª—å–Ω—ã–µ —Å–º–µ—Ä—Ç–∏: {format_number(player.bedwars.final_deaths)}\n"
                f"FK/D: {format_number(player.bedwars.fkdr)}\n"
                f"\n"
                f"–ü–æ–±–µ–¥—ã: {format_number(player.bedwars.wins)}\n"
                f"–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {format_number(player.bedwars.losses)}\n"
                f"W/L: {format_number(player.bedwars.wlr)}\n"
                f"\n"
                f"–°—ã–≥—Ä–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã: {format_number(player.bedwars.games_played)}\n"
                f"\n"
                f"–ü–æ–±–µ–¥—ã –ø–æ–¥—Ä—è–¥: {format_number(player_bedwars_winstreak)}\n"
                f"\n"
                f"–°–ª–æ–º–∞–Ω–Ω—ã–µ –∫—Ä–æ–≤–∞—Ç–∏: {format_number(player.bedwars.beds_broken)}\n"
                f"–ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –∫—Ä–æ–≤–∞—Ç–∏: {format_number(player.bedwars.beds_lost)}\n"
                f"BB/L: {format_number(player.bedwars.bblr)}\n"
                f"\n"
                f"–ú–æ–Ω–µ—Ç—ã: {format_number(player.bedwars.coins)}"
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="duels")
    async def get_duels(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        player_duels_kdr = round_number(player.duels.kills / player.duels.deaths)

        player_duels_mhmr = round_number(
            player.duels.melee_hits / player.duels.melee_swings
        )

        player_duels_bhmr = round_number(
            player.duels.arrows_hit / player.duels.arrows_shot
        )

        embed = Embed(
            title=f"üìä Duels —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {player.name}",
            description=(
                f"–ö–∏–ª–ª—ã: {format_number(player.duels.kills)}\n"
                f"–°–º–µ—Ä—Ç–∏: {format_number(player.duels.deaths)}\n"
                f"K/D: {format_number(player_duels_kdr)}\n"
                f"\n"
                f"–ü–æ–±–µ–¥—ã: {format_number(player.duels.wins)}\n"
                f"–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {format_number(player.duels.losses)}\n"
                f"W/L: {format_number(player.duels.wlr)}\n"
                f"\n"
                f"–£–¥–∞—Ä—ã –≤ –±–ª–∏–∂–Ω–µ–º –±–æ—é: {format_number(player.duels.melee_hits)}\n"
                f"–ü–æ–ø–∞–¥–∞–Ω–∏—è –≤ –±–ª–∏–∂–Ω–µ–º –±–æ—é: {format_number(player.duels.melee_swings)}\n"
                f"H/M: {format_number(player_duels_mhmr)}\n"
                f"\n"
                f"–í—ã—Å—Ç—Ä–µ–ª—ã –∏–∑ –ª—É–∫–∞: {format_number(player.duels.arrows_shot)}\n"
                f"–ü–æ–ø–∞–¥–∞–Ω–∏—è —Å –ª—É–∫–∞: {format_number(player.duels.arrows_hit)}\n"
                f"H/M: {format_number(player_duels_bhmr)}\n"
                f"\n"
                f"–ú–æ–Ω–µ—Ç—ã: {format_number(player.duels.coins)}"
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="arcade")
    async def get_arcade(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        embed = Embed(
            title=f"üìä Arcade —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {player.name}",
            description=(
                f"–ú–æ–Ω–µ—Ç—ã: {format_number(player.arcade.coins)}\n"
                f"\n"
                f"Hypixel Says:\n"
                f"–ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {format_number(player.arcade.hypixel_says.rounds)}\n"
                f"–ü–æ–±–µ–¥—ã: {format_number(player.arcade.hypixel_says.wins)}\n"
                f"–ü—Ä–æ–∏–≥—Ä—ã—à–∏: {format_number(player.arcade.hypixel_says.losses)}\n"
                f"W/L: {format_number(player.arcade.hypixel_says.wlr)}\n"
                f"\n"
                f"–ü–æ–±–µ–¥—ã Party Games: {format_number(player.arcade.party_games.total_wins)}\n"
                f"\n"
                f"Capture The Wool:\n"
                f"–ó–∞—Ö–≤–∞—Ç—ã —à–µ—Ä—Å—Ç–∏: {format_number(player.arcade.ctw.captures)}\n"
                f"–ö–∏–ª–ª—ã –∏ –∞—Å—Å–∏—Å—Ç—ã: {format_number(player.arcade.ctw.kills_assists)}\n"
                f"\n"
                f"Mini Walls:\n"
                f"–ü–æ–±–µ–¥—ã: {format_number(player.arcade.mini_walls.wins)}\n"
                f"–ö–∏–ª–ª—ã: {format_number(player.arcade.mini_walls.kills)}\n"
                f"–°–º–µ—Ä—Ç–∏: {format_number(player.arcade.mini_walls.deaths)}\n"
                f"K/D: {format_number(player.arcade.mini_walls.kdr)}\n"
                f"–§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∏–ª–ª—ã: {format_number(player.arcade.mini_walls.final_kills)}\n"
                f"–ö–∏–ª–ª—ã –ò—Å—Å—É—à–∏—Ç–µ–ª—è: {format_number(player.arcade.mini_walls.wither_kills)}\n"
                f"–£—Ä–æ–Ω –ò—Å—Å—É—à–∏—Ç–µ–ª—è: {format_number(player.arcade.mini_walls.wither_damage)}\n"
                f"–ü–æ–ø–∞–¥–∞–Ω–∏—è —Å—Ç—Ä–µ–ª–æ–π: {format_number(player.arcade.mini_walls.arrows_hit)}\n"
                f"–û–±—â–∏–µ –≤—ã—Å—Ç—Ä–µ–ª—ã: {format_number(player.arcade.mini_walls.arrows_shot)}"
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="tkr")
    async def get_tkr(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        embed = Embed(
            title=f"üìä Turbo Kart Racers —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {player.name}",
            description=(
                f"–ü–æ–±–µ–¥—ã: {format_number(player.tkr.wins)}\n"
                f"\n"
                f"–ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –∫—Ä—É–≥–∏: {format_number(player.tkr.laps)}\n"
                f"\n"
                f"–¢—Ä–æ—Ñ–µ–∏:\n"
                f"–ó–æ–ª–æ—Ç—ã–µ —Ç—Ä–æ—Ñ–µ–∏: {format_number(player.tkr.gold)}\n"
                f"–°–µ—Ä–µ–±—Ä—è–Ω–Ω—ã–µ —Ç—Ä–æ—Ñ–µ–∏: {format_number(player.tkr.silver)}\n"
                f"–ë—Ä–æ–Ω–∑–æ–≤—ã–µ —Ç—Ä–æ—Ñ–µ–∏: {format_number(player.tkr.bronze)}\n"
                f"\n"
                f"–£–¥–∞—Ä—ã –±–∞–Ω–∞–Ω–æ–≤–æ–π —à–∫—É—Ä–∫–æ–π: {format_number(player.tkr.banana_hits)}\n"
                f"–ù–∞–µ–∑–¥—ã –Ω–∞ –±–∞–Ω–∞–Ω–æ–≤—É—é —à–∫—É—Ä–∫—É: {format_number(player.tkr.bananas_received)}\n"
                f"H/R: {format_number(player.tkr.br)}"
                f"\n"
                f"–£–¥–∞—Ä—ã —Å–∏–Ω–µ–π —Ç–æ—Ä–ø–µ–¥–æ–π: {format_number(player.tkr.blue_torpedo_hits)}\n"
                f"\n"
                f"–ú–æ–Ω–µ—Ç—ã: {format_number(player.tkr.coins)}"
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)

    @commands.group(name="paintball")
    async def get_paintball(self, ctx: Context, where: str = ""):
        if not where:
            where = ctx.message.author.name

        where = where.lower()

        client = hypixel.Client(API_KEY)
        async with client:
            try:
                player = await client.player(where)
            except HypixelException:
                embed = Embed(
                    title=f"‚ùå –û—à–∏–±–∫–∞!",
                    description=(f"–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"),
                    color=ERROR_COLOR,
                )
                await ctx.send(embed=embed)

        player_uuid = player.uuid

        embed = Embed(
            title=f"üìä Paintball —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {player.name}",
            description=(
                f"–ü–æ–±–µ–¥—ã: {format_number(player.paintball.wins)}\n"
                f"\n"
                f"–ö–∏–ª–ª—ã: {format_number(player.paintball.kills)}\n"
                f"–°–µ—Ä–∏–∏ –∫–∏–ª–ª–æ–≤: {format_number(player.paintball.killstreaks)}\n"
                f"–°–º–µ—Ä—Ç–∏: {format_number(player.paintball.deaths)}\n"
                f"K/D: {format_number(player.paintball.kdr)}\n"
                f"\n"
                f"–í—ã—Å—Ç—Ä–µ–ª—ã: {format_number(player.paintball.shots_fired)}\n"
                f"S/K: {format_number(player.paintball.skr)}\n"
                f"\n"
                f"–ú–æ–Ω–µ—Ç—ã: {format_number(player.paintball.coins)}"
            ),
            color=SUCCESS_COLOR,
        )
        embed.set_thumbnail(url=create_head(player_uuid))

        await ctx.send(embed=embed)
